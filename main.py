import random


# Функция для красивого вывода двумерного массива в удобном виде
def pretty_print(mas):
    """
    Выводит двумерный массив в удобном виде.
    Добавляет границы из '=' для разделения.
    """
    print('=' * 10)  # Выводим линию из 10 символов "=" для начала вывода
    for row in mas:  # Проходим по каждой строке двумерного массива
        print(*row)  # Распаковывает элементы строки и выводит их через пробел
    print('=' * 10)  # Выводим линию из 10 символов "=" в конце


# Функция для преобразования индексов (i, j) в номер клетки (1-16)
def get_number_from_index(i, j):
    """
    Преобразует индексы массива (i, j) в номер клетки (1-16).
    Удобно для работы с одномерным представлением массива.
    """
    return i * 4 + j + 1  # Формула для вычисления номера клетки (1-16)


# Функция для преобразования номера клетки (1-16) в индексы массива (x, y)
def get_index_from_number(num):
    """
    Преобразует номер клетки (1-16) в индексы массива (x, y).     
    Удобно для работы с двумерным представлением массива.     
    """     
    num -= 1  # Уменьшаем номер на 1, чтобы начать отсчёт с 0
    x, y = num // 4, num % 4  # Делим номер на 4 для нахождения строки и остаток для столбца
    return x, y  # Возвращаем индексы строки и столбца


# Функция для вставки в массив числа 2 или 4 в заданную позицию (x, y)
def insert_2_or_4(mas, x, y):     
    """     
    Вставляет в массив в позицию (x, y) число 2 или 4.     
    Число 2 добавляется с вероятностью 75%, число 4 — с вероятностью 25%.     
    """     
    if random.random() <= 0.75:  # 75% вероятность для числа 2
        mas[x][y] = 2  # Вставляем число 2 в указанную клетку
    else:  # 25% вероятность для числа 4
        mas[x][y] = 4  # Вставляем число 4 в указанную клетку
    return mas  # Возвращаем обновлённый массив


# Функция для получения списка номеров пустых клеток (где значение 0)
def get_empty_list(mas):     
    """     
    Возвращает список номеров клеток, которые пусты (содержат 0).     
    Перебирает все элементы массива и собирает номера пустых клеток.     
    """     
    empty = []  # Инициализация пустого списка для хранения номеров пустых клеток
    for i in range(4):  # Перебираем строки массива
        for j in range(4):  # Перебираем столбцы массива
            if mas[i][j] == 0:  # Если клетка пуста (значение 0)
                num = get_number_from_index(i, j)  # Получаем номер клетки
                empty.append(num)  # Добавляем номер пустой клетки в список
    return empty  # Возвращаем список номеров пустых клеток


# Инициализация пустого массива 4x4 (все клетки содержат 0)
mas = [
    [0, 0, 0, 0],  # Первая строка (все пусто)
    [0, 0, 0, 0],  # Вторая строка (все пусто)
    [0, 0, 0, 0],  # Третья строка (все пусто)
    [0, 0, 0, 0],  # Четвёртая строка (все пусто)
]

# Добавляем числа в массив для теста (пример, чтобы увидеть, как работают функции)
mas[1][2] = 2  # Устанавливаем число 2 в клетку (1, 2)
mas[3][0] = 4  # Устанавливаем число 4 в клетку (3, 0)

# Выводим список пустых клеток (клетки с числом 0)
print(get_empty_list(mas))

# Выводим массив в удобном виде
pretty_print(mas)
