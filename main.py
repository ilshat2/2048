import random


def pretty_print(mas):
    """
    Выводит двумерный массив в удобном виде.
    Добавляет границы из '=' для разделения.
    """
    print('=' * 10)
    for row in mas:
        print(*row)  # Распаковывает элементы строки и выводит их через пробел
    print('=' * 10)


def get_number_from_index(i, j):
    """
    Преобразует индексы массива (i, j) в номер клетки (1-16).
    Удобно для работы с одномерным представлением массива.
    """
    return i * 4 + j + 1


def get_index_from_number(num):
    """
    Преобразует номер клетки (1-16) в индексы массива (x, y).
    Удобно для работы с двумерным представлением массива.
    """
    num -= 1  # Уменьшаем номер на 1, чтобы начать отсчёт с 0
    x, y = num // 4, num % 4  # Деление для нахождения строки и столбца
    return x, y


def insert_2_or_4(mas, x, y):
    """
    Вставляет в массив в позицию (x, y) число 2 или 4.
    Число 2 добавляется с вероятностью 75%, число 4 — с вероятностью 25%.
    """
    if random.random() <= 0.75:  # 75% вероятность
        mas[x][y] = 2
    else:  # 25% вероятность
        mas[x][y] = 4
    return mas


def get_empty_list(mas):
    """
    Возвращает список номеров клеток, которые пусты (содержат 0).
    Перебирает все элементы массива и собирает номера пустых клеток.
    """
    empty = []
    for i in range(4):  # Перебираем строки
        for j in range(4):  # Перебираем столбцы
            if mas[i][j] == 0:  # Если клетка пуста
                num = get_number_from_index(i, j)  # Получаем её номер
                empty.append(num)  # Добавляем номер в список
    return empty


# Инициализация пустого массива 4x4
mas = [
    [0, 0, 0, 0],  # Первая строка
    [0, 0, 0, 0],  # Вторая строка
    [0, 0, 0, 0],  # Третья строка
    [0, 0, 0, 0],  # Четвёртая строка
]

# Добавляем числа в массив для теста
mas[1][2] = 2  # Устанавливаем число 2 в клетку (1, 2)
mas[3][0] = 4  # Устанавливаем число 4 в клетку (3, 0)

# Вывод списка пустых клеток
print(get_empty_list(mas))

# Красивый вывод массива
pretty_print(mas)
